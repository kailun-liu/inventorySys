{"version":3,"sources":["components/PrintLabel.js","components/CreateSamples.js","components/EditSamples.js","components/Data.js","App.js","reportWebVitals.js","index.js"],"names":["PrintLabel","onTextBoxChange","printLabelTriggeredByKeyboard","printLabel","toggleCreateSamples","sampleID","className","onKeyPress","event","onChange","type","placeholder","defaultValue","onClick","id","CreateSamples","createSamplesName","createSamplesStock","createSamplesSubmit","htmlFor","EditSamples","toggleEditSamples","commodityname","stock","_id","editInventoryItem","emptyTable","Data","onRowClick","items","populateValues","showEditSamples","headers","tableActions","text","invisible","sortable","filterable","transform","value","index","row","data","name","dynamic","perPage","itemList","commodityName","App","setState","target","key","fetch","method","body","JSON","stringify","state","then","resp","json","console","log","catch","err","showCreateSamples","rowData","rowIndex","tableData","obj","uniseq","push","props","i","length","Object","assign","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.926a77fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst  PrintLabel = ({onTextBoxChange, printLabelTriggeredByKeyboard, printLabel, toggleCreateSamples, sampleID}) => {\r\n\r\n\treturn (\r\n\t   <div className=\"m-1 p-2 bg-light sticky-top\">\r\n\t    <div className=\"row\">\r\n\t       <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-4\">\r\n\t          <input onKeyPress={(event)=>printLabelTriggeredByKeyboard(event)} onChange={(event)=>onTextBoxChange(event)} type=\"text\" className=\"form-control\" placeholder=\"sample ID\" defaultValue={sampleID}/>\r\n\t       </div>\r\n\t       <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-4\">\r\n\t       <button onClick={printLabel} className=\"btn btn-outline-secondary w-100\" type=\"button\" id=\"TSCTTP345\">Print</button>\r\n\t       </div>\r\n\t       <div className=\"col-xl-3 col-lg-3 col-md-4 col-sm-4\">\r\n\t       <button onClick={()=>toggleCreateSamples(true)} className=\"btn btn-outline-secondary w-100\" type=\"button\" id=\"Create_Inventory_Item\">Create Inventory Item</button>\r\n\t    \t</div>\r\n\t    </div>\r\n\t   </div>\r\n\t   )\r\n}\r\n\r\n\r\nexport default PrintLabel;\r\n\r\n\r\n\r\n\t","import React from 'react';\r\n\r\n\r\nconst CreateSamples = ({toggleCreateSamples, createSamplesName, createSamplesStock, createSamplesSubmit}) => {\r\n\treturn (\r\n\t\t<div className=\"CreateSamples w-100\">\r\n\t\t\t<div className=\"w-50 border p-5 bg-light\">\r\n\t\t\t  <div className=\"form-group m-1\">\r\n\t\t\t    <label htmlFor=\"commodity_name\">商品名稱</label>\r\n\t\t\t    <input onChange={(event)=>createSamplesName(event)} type=\"text\" className=\"form-control\" id=\"commodity_name\" placeholder=\"輸入商品名稱\" />\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group m-1\">\r\n\t\t\t    <label htmlFor=\"stock\">庫存數量</label>\r\n\t\t\t    <input onChange={(event)=>createSamplesStock(event)} type=\"text\" className=\"form-control\" id=\"stock\" placeholder=\"庫存數量\" />\r\n\t\t\t  </div>\r\n\t\t\t  <button onClick={()=>{createSamplesSubmit(); toggleCreateSamples(false)}} type=\"submit\" className=\"btn btn-primary m-1\">建立</button>\r\n\t\t\t  <button onClick={()=>toggleCreateSamples(false)} type=\"submit\" className=\"btn btn-secondary m-1\">取消</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default CreateSamples;","import React from 'react';\r\n\r\n\r\nconst EditSamples = ({toggleEditSamples, commodityname, stock, _id, editInventoryItem, createSamplesName, createSamplesStock}) => {\r\n\treturn (\r\n\t\t<div className=\"CreateSamples w-100\">\r\n\t\t\t<div className=\"w-50 border p-5 bg-light\">\r\n\t\t\t  <div className=\"form-group m-1\">\r\n\t\t\t    <label htmlFor=\"commodity_name\">商品名稱</label>\r\n\t\t\t    <input onChange={(event)=>createSamplesName(event)} type=\"text\" className=\"form-control\" id=\"commodity_name\" placeholder=\"輸入商品名稱\" defaultValue={commodityname}/>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group m-1\">\r\n\t\t\t    <label htmlFor=\"stock\">庫存數量</label>\r\n\t\t\t    <input  onChange={(event)=>createSamplesStock(event)} type=\"text\" className=\"form-control\" id=\"stock\" placeholder=\"庫存數量\" defaultValue={stock}/>\r\n\t\t\t  </div>\r\n\t\t\t  <button onClick={()=>{editInventoryItem(_id, commodityname, stock); toggleEditSamples(false)}}type=\"submit\" className=\"btn btn-primary m-1\">更新</button>\r\n\t\t\t  <button onClick={()=>toggleEditSamples(false)} type=\"submit\" className=\"btn btn-secondary m-1\">取消</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default EditSamples;","import SmartDataTable from 'react-smart-data-table'\r\nimport 'react-smart-data-table/dist/react-smart-data-table.css'\r\n\r\n\r\nconst numResults = 100\r\nconst emptyTable = <div>There is no data available at the time.</div>\r\n\r\n\r\nconst  Data = ({toggleEditSamples, onRowClick, items, showEditSamples, populateValues}) => {\r\n\t\r\n\tconst headers = {\r\n\t  tableActions: {\r\n\t    text: 'Actions',\r\n\t    invisible: false,\r\n\t    sortable: false,\r\n\t    filterable: false,\r\n\t    transform: (value, index, row) => {\r\n\t      return (\r\n\t      \t\t<button onClick={()=>{populateValues(row); toggleEditSamples(true);}} className=\"btn btn-outline-secondary\">Edit</button>\r\n\t      \t)\r\n\t    }\r\n\t  }\r\n\t}\r\n\treturn (\r\n\t\t<SmartDataTable\r\n\t\temptyTable={emptyTable}\r\n\t    data={items}\r\n\t    name=\"test-table\"\r\n\t    className=\"ui compact selectable table\"\r\n\t    sortable={true}\r\n\t    dynamic={true}\r\n\t    perPage={numResults}\r\n\t    onRowClick={onRowClick}\r\n\t    headers={headers}\r\n\t  \t/>\r\n\t)\r\n}\r\n\r\nexport default Data;","import React, { Component } from 'react';\nimport PrintLabel from './components/PrintLabel';\nimport CreateSamples from './components/CreateSamples';\nimport EditSamples from './components/EditSamples';\nimport Data from './components/Data';\nimport './App.css';\n\n\nconst itemList= [\n\n  {\n    _id:0,\n    commodityName:\"商務襯衫\",\n    stock:2\n  },\n  {\n    _id:1,\n    commodityName:\"花式襯衫\",\n    stock:3\n  },\n\n]\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      _id:0,\n      uniseq:2,\n      sampleID:'',\n      showCreateSamples: false,\n      showEditSamples:false,\n      commodityname:'',\n      stock:0,\n      items: itemList\n    }\n  }\n\n  onTextBoxChange=(event)=>{\n    this.setState({sampleID: event.target.value})\n  }\n\n  printLabelTriggeredByKeyboard=(event)=>{\n    if (event.key === 'Enter'){\n        fetch('http://localhost:3001/', {\n          method:'POST',\n          headers:{'Content-Type':'application/json'},\n          body: JSON.stringify({\n            sampleID:this.state.sampleID\n          })\n        })\n        .then(resp=>resp.json())\n        .then(data=>console.log(data))\n        .catch(err=>console.log(err))\n    }\n  }  \n\n  printLabel=()=>{\n    fetch('http://localhost:3001/', {\n      method:'POST',\n      headers:{'Content-Type':'application/json'},\n      body: JSON.stringify({\n        sampleID:this.state.sampleID\n      })\n    })\n    .then(resp=>resp.json())\n    .then(data=>console.log(data))\n    .catch(err=>console.log(err))\n  }\n\n  toggleCreateSamples=(value)=>{\n    this.setState({showCreateSamples: value});\n  }\n\n  toggleEditSamples=(value)=>{\n    this.setState({showEditSamples: value});\n  }\n\n  onRowClick = (event, { rowData, rowIndex, tableData }) => {\n     this.setState({sampleID: rowData._id});\n  }\n\n  createSamplesName=(event)=>{\n    this.setState({commodityname: event.target.value});\n   \n  }\n\n  createSamplesStock=(event)=>{\n    this.setState({stock: event.target.value});\n    \n  }\n\n  createSamplesSubmit=()=>{\n    const obj = {\n      _id: this.state.uniseq,\n      commodityName: this.state.commodityname,\n      stock: this.state.stock\n    }\n    itemList.push(obj);\n    this.setState((state, props) => ({\n      items: itemList,\n      uniseq:state.uniseq+1,\n      commodityname: '',\n      stock:0\n    }));\n  }\n\n  populateValues=(row)=>{\n    this.setState((state, props) => ({\n    _id:row._id,\n    commodityname: row.commodityName,\n    stock:row.stock\n  }));\n  }\n\n  editInventoryItem=(_id, commodityname, stock)=>{\n    let index = 0;\n    for (let i = 0; i < itemList.length; i++) {\n      if (itemList[i]._id===_id) {\n          index = i;\n      }\n    }\n    itemList[index] = Object.assign(itemList[index], {commodityName: commodityname, stock:stock})\n    this.setState((state, props) => ({\n      items: itemList,\n    }));\n   \n  }\n\n  render(){\n    \n    return (\n      <div>\n        <PrintLabel onTextBoxChange={this.onTextBoxChange} \n        printLabelTriggeredByKeyboard={this.printLabelTriggeredByKeyboard} \n        printLabel={this.printLabel}\n        toggleCreateSamples={this.toggleCreateSamples}\n        sampleID={this.state.sampleID}/>\n        {this.state.showCreateSamples? <CreateSamples createSamplesName={this.createSamplesName} createSamplesStock={this.createSamplesStock} createSamplesSubmit={this.createSamplesSubmit} toggleCreateSamples={this.toggleCreateSamples}/>: <div></div>}\n        {this.state.showEditSamples? <EditSamples createSamplesName={this.createSamplesName} createSamplesStock={this.createSamplesStock} editInventoryItem={this.editInventoryItem} _id={this.state._id} commodityname={this.state.commodityname} stock={this.state.stock} toggleEditSamples={this.toggleEditSamples}/>: <div></div>}\n        <Data populateValues={this.populateValues} items={this.state.items} showEditSamples={this.state.showEditSamples} toggleEditSamples={this.toggleEditSamples} onRowClick={this.onRowClick}/>\n      </div>\n      );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}